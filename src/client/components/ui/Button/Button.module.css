/* Button.module.css */
.button {
  width: 100%;
  padding: 0.75rem;
  background: rgba(201, 162, 39, 0.05);
  border: 1px solid var(--border);
  color: var(--gold-primary);
  font-family: var(--serif-font-family);
  font-size: clamp(0.875rem, 2.5vw, 1rem);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  text-transform: uppercase;
  font-feature-settings: 'ss01', 'ss02', 'liga', 'dlig'; /* Enable Garamond ligatures */
  letter-spacing: 0.15em;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Glowing border effect */
.button::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: linear-gradient(
    45deg,
    transparent 0%,
    rgba(201, 162, 39, 0.1) 45%,
    rgba(201, 162, 39, 0.3) 50%,
    rgba(201, 162, 39, 0.1) 55%,
    transparent 100%
  );
  mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

/* Arcane symbols effect */
.button::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath d='M50 10 L90 90 L10 90 Z' fill='none' stroke='rgba(201, 162, 39, 0.1)' stroke-width='1'/%3E%3C/svg%3E");
  background-size: 20px 20px;
  opacity: 0;
  transition:
    opacity 0.3s ease,
    transform 1s ease;
  pointer-events: none;
  transform: translateY(100%);
}

/* Hover effects */
.button:hover:not(:disabled) {
  background: rgba(201, 162, 39, 0.15);
  border-color: var(--gold-primary);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(201, 162, 39, 0.2);
}

.button:hover:not(:disabled)::before {
  opacity: 1;
  animation: borderGlow 2s linear infinite;
}

.button:hover:not(:disabled)::after {
  opacity: 0.5;
  transform: translateY(0);
}

/* Active state */
.button:active:not(:disabled) {
  transform: translateY(0);
  background: rgba(201, 162, 39, 0.2);
  box-shadow: 0 0 12px rgba(201, 162, 39, 0.3) inset;
}

/* Disabled state */
.button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  filter: grayscale(0.5);
}

/* Secondary variant */
.secondary {
  background: transparent;
  color: var(--white-secondary);
  border-color: var(--border);
  font-size: 0.9em;
}

.secondary:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.05);
  box-shadow: 0 2px 8px rgba(255, 255, 255, 0.1);
}

/* Short variant */
.short {
  max-width: 200px;
  align-self: center;
}

/* Loading state animation */
.button[aria-busy='true'] {
  position: relative;
  cursor: wait;
}

.button[aria-busy='true']::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: linear-gradient(90deg, transparent, rgba(201, 162, 39, 0.2), transparent);
  animation: loading 1.5s infinite;
}

.returnButton {
  color: var(--foreground);
}

@keyframes borderGlow {
  0%,
  100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.3);
  }
}

@keyframes loading {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

/* Optional: Add a subtle pulse effect when button triggers important actions */
.button[data-important='true']:not(:hover) {
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(201, 162, 39, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(201, 162, 39, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(201, 162, 39, 0);
  }
}
